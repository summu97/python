Python is an object oriented programming language.
Almost everything in Python is an object, with its properties and methods.
A Class is like an object constructor, or a "blueprint" for creating objects.

Why OOP's in python?
- To map with real world scenarios.

Class definition:
class MyClass:
  x = 5

Object definition:
p1 = MyClass()
print(p1.x)

The examples above are classes and objects in their simplest form, and are not really useful in real life applications.

Constructor: __init__ function
- All classes have a function called __init__(), which is always executed when the class is being initiated(Gets invoked when creating an object).

Ex:
class Person:
  def __init__(self, name, age):
    self.name = name
    self.age = age

p1 = Person("John", 36)

print(p1.name)
print(p1.age)

Note: The __init__() function is called automatically every time the class is being used to create a new object.
